var i = Object.defineProperty;
var o = (t, e, a) => e in t ? i(t, e, { enumerable: !0, configurable: !0, writable: !0, value: a }) : t[e] = a;
var r = (t, e, a) => (o(t, typeof e != "symbol" ? e + "" : e, a), a);
import d from "@arweave-wallet-kit/browser-wallet-strategy";
async function n(t, e = []) {
  return window != null && window.arweaveWallet ? await window.arweaveWallet[t](...e) : new Promise(
    (a, w) => window.addEventListener("arweaveWalletLoaded", async () => {
      try {
        a(await window.arweaveWallet[t](...e));
      } catch (l) {
        w(l);
      }
    })
  );
}
class u extends d {
  constructor() {
    super();
    r(this, "id", "wander");
    r(this, "name", "Wander");
    r(this, "description", "Non-custodial Arweave & AO wallet for your favorite browser");
    r(this, "theme", "235, 224, 255");
    r(this, "logo", "ZafBy2bAp4kj-dFUVJm-EsupwgGhcDJPTpufsa7AYsI");
    r(this, "url", "https://www.wander.app");
  }
  async isAvailable() {
    return !await super.isAvailable() || !window.arweaveWallet ? !1 : window.arweaveWallet.walletName === "Wander" || window.arweaveWallet.walletName === "ArConnect";
  }
  async addToken(a) {
    return await n("addToken", [a]);
  }
  async batchSignDataItem(a) {
    return await n("batchSignDataItem", [a]);
  }
}
export {
  u as default
};
